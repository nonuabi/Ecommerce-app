{"version":3,"sources":["redux/posts/postType.js","redux/posts/postAction.js","components/NewProduct.js","components/Navbar.js","components/Products.js","components/InformationContainer.js","redux/posts/postReducer.js","redux/store.js","App.js","components/CartContainer.js","index.js"],"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","DELETE_PROUDUCT_FROM_CART","DELETE_PRODUCT","PRODUCT_INFORMATION","ADD_TO_CART","POST_PRODUCT_SUCCESS","HANDLE_SORT_BUTTON","HANDLE_EDIT_POST","api_url","fetchPostsRequest","type","addToCart","product_id","payload","postProductSuccess","product","NewProduct","dispatch","useDispatch","useState","title","description","price","rating","details","setDetails","className","name","id","placeholder","onChange","e","target","value","onClick","a","fetch","method","body","JSON","stringify","headers","res","json","data","connect","state","numOfCartItems","cart","length","to","class","console","log","postData","fetchPost","response","deleteProduct","product_Information","sort","edit","handleEditPost","isInEditMode","inEdit","setInEdit","inputRef","useRef","useEffect","changeEditMode","updateComponentValue","current","loading","error","posts","b","map","post","defaultValue","ref","new_products","product_info","item","setItem","temp","filter","product_info_id","info","about","initialState","reducer","action","alert","concat","tempPosts","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","deleteProductFromCart","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.11f8b956.chunk.js","sourcesContent":["export const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\r\nexport const FETCH_POSTS_FAILURE = \"FETCH_POSTS_FAILURE\";\r\nexport const DELETE_PROUDUCT_FROM_CART = \"DELETE_PROUDUCT_FROM_CART\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const PRODUCT_INFORMATION = \"PRODUCT_INFORMATION\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const POST_PRODUCT_SUCCESS = \"POST_PRODUCT_SUCCESS\";\r\nexport const HANDLE_SORT_BUTTON = \"HANDLE_SORT_BUTTON\";\r\nexport const HANDLE_EDIT_POST = \"HANDLE_EDIT_POST\";\r\n","// IMPORT ACTION TYPES\r\nimport {\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  DELETE_PRODUCT,\r\n  PRODUCT_INFORMATION,\r\n  ADD_TO_CART,\r\n  DELETE_PROUDUCT_FROM_CART,\r\n  POST_PRODUCT_SUCCESS,\r\n  HANDLE_SORT_BUTTON,\r\n  HANDLE_EDIT_POST,\r\n} from \"./postType\";\r\n\r\nconst api_url =\r\n  \"https://my-json-server.typicode.com/nonuabi/Ecommerce-App-DB/posts\";\r\n\r\n// ACTION CREATER\r\nexport const fetchPostsRequest = () => {\r\n  return {\r\n    type: FETCH_POSTS_REQUEST,\r\n  };\r\n};\r\nexport const fetchPostsSuccess = (posts) => {\r\n  return {\r\n    type: FETCH_POSTS_SUCCESS,\r\n    payload: posts,\r\n  };\r\n};\r\nexport const fetchPostsFailure = (error) => {\r\n  return {\r\n    type: FETCH_POSTS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n// FETCH POST FORM THE API ACTION WHICH RETURN AN FUNCTION\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostsRequest);\r\n    const res = await fetch(api_url);\r\n    const response = await res.json();\r\n    if (response) {\r\n      dispatch(fetchPostsSuccess(response));\r\n    } else {\r\n      dispatch(fetchPostsFailure(\"server error\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProduct = (id) => {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const productInformation = (product_id) => {\r\n  return {\r\n    type: PRODUCT_INFORMATION,\r\n    payload: product_id,\r\n  };\r\n};\r\n\r\nexport const addToCart = (product_id) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    payload: product_id,\r\n  };\r\n};\r\n\r\nexport const deleteProductFromCart = (product_id) => {\r\n  return {\r\n    type: DELETE_PROUDUCT_FROM_CART,\r\n    payload: product_id,\r\n  };\r\n};\r\n\r\nexport const postProductSuccess = (product) => {\r\n  return {\r\n    type: POST_PRODUCT_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\n\r\nexport const addProduct = (product) => {\r\n  return async (dispatch) => {\r\n    const res = await fetch(api_url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        ...product,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    if (data) {\r\n      dispatch(postProductSuccess(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleSortButton = () => {\r\n  return {\r\n    type: HANDLE_SORT_BUTTON,\r\n  };\r\n};\r\n\r\nexport const handleEditPost = (data) => {\r\n  return {\r\n    type: HANDLE_EDIT_POST,\r\n    payload: data,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { addProduct } from \"../redux/posts/postAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"../css/NewProduct.css\";\r\nconst NewProduct = () => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    rating: 0.0,\r\n  });\r\n\r\n  return (\r\n    <div className=\"new_product\">\r\n      <h1 className=\"display-4\">Add a Product</h1>\r\n      <div className=\"form_item\">\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"floatingInput\"\r\n            placeholder=\"Name\"\r\n            onChange={(e) => setDetails({ ...details, title: e.target.value })}\r\n            value={details.title}\r\n          />\r\n          <label v-for=\"floatingInput\">Name</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"description\"\r\n            value={details.description}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Description\"\r\n            onChange={(e) =>\r\n              setDetails({ ...details, description: e.target.value })\r\n            }\r\n          />\r\n          <label v-for=\"floatingPassword\">Description</label>\r\n        </div>\r\n\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"price\"\r\n            value={details.price}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Price\"\r\n            onChange={(e) => setDetails({ ...details, price: e.target.value })}\r\n          />\r\n          <label v-for=\"floatingPassword\">Price</label>\r\n        </div>\r\n\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"rating\"\r\n            value={details.rating}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Rating\"\r\n            onChange={(e) => setDetails({ ...details, rating: e.target.value })}\r\n          />\r\n          <label v-for=\"floatingPassword\">Rating</label>\r\n        </div>\r\n        <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n          <button\r\n            onClick={() => dispatch(addProduct(details))}\r\n            className=\"btn btn-dark\"\r\n            type=\"submit\"\r\n          >\r\n            Button\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../css/Navbar.css\";\r\nconst Navbar = ({ numOfCartItems }) => {\r\n  return (\r\n    <div className=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link id=\"home_link\" className=\"navbar-brand\" to=\"/\">\r\n          eCommerce\r\n        </Link>\r\n        <div className=\" navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item nav-link active\">\r\n              <Link className=\"navbar-brand\" to=\"products\">\r\n                Products\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item nav-link active\">\r\n              {\" \"}\r\n              <Link className=\"navbar-brand\" to=\"/new\">\r\n                Add a Product <i class=\"fas fa-folder-plus\"></i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Link className=\"navbar-brand\" to=\"/cart\">\r\n          <i className=\"fas fa-cart-plus\"></i>\r\n          <span>{numOfCartItems}</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    numOfCartItems: state.cart.length,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/ProductsContainer.css\";\r\nimport {\r\n  deleteProduct,\r\n  fetchPosts,\r\n  productInformation,\r\n  addToCart,\r\n  handleSortButton,\r\n  handleEditPost,\r\n} from \"../redux/posts/postAction\";\r\nconst Products = ({\r\n  fetchPost,\r\n  postData,\r\n  deleteProduct,\r\n  product_Information,\r\n  addToCart,\r\n  sort,\r\n  edit,\r\n}) => {\r\n  const [inEdit, setInEdit] = useState({\r\n    value: \"Type Here..\",\r\n    isInEditMode: false,\r\n    id: -1,\r\n  });\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, [postData.sort]);\r\n  const changeEditMode = (product_id) => {\r\n    setInEdit({\r\n      ...inEdit,\r\n      isInEditMode: !inEdit.isInEditMode,\r\n      id: product_id,\r\n    });\r\n  };\r\n\r\n  const updateComponentValue = (product_id) => {\r\n    edit({ id: product_id, value: inputRef.current.value });\r\n    if (inputRef.current) {\r\n      setInEdit({\r\n        ...inEdit,\r\n        isInEditMode: !inEdit.isInEditMode,\r\n        value: inputRef.current.value,\r\n      });\r\n    }\r\n  };\r\n  const handleSort = () => {\r\n    if (postData.sort) {\r\n      return postData.posts;\r\n    } else {\r\n      let sorted = postData.posts.sort((a, b) => {\r\n        return a.price - b.price;\r\n      });\r\n      return sorted;\r\n    }\r\n  };\r\n  return postData.loading ? (\r\n    <h2 class=\"display-1\">Loading...</h2>\r\n  ) : postData && postData.error ? (\r\n    <h2>{postData.error}</h2>\r\n  ) : (\r\n    <div>\r\n      <div className=\"product_header\">\r\n        <h2>Product List</h2>\r\n        <button class=\"btn btn-outline-dark\" onClick={sort}>\r\n          Sort\r\n        </button>\r\n      </div>\r\n      <div className=\"cart_container\">\r\n        {postData &&\r\n          postData.posts &&\r\n          handleSort().map((post) => {\r\n            return (\r\n              <div className=\"card\" id=\"cart_id\" key={post.id}>\r\n                <div className=\"card-body\">\r\n                  {inEdit.isInEditMode && inEdit.id === post.id ? (\r\n                    <div\r\n                      id=\"edit_input_container\"\r\n                      class=\"input-group flex-nowrap\"\r\n                    >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        defaultValue={post.title}\r\n                        ref={inputRef}\r\n                      />\r\n                      <button\r\n                        id=\"edit_btn\"\r\n                        class=\"btn btn-danger\"\r\n                        onClick={changeEditMode}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      <button\r\n                        id=\"edit_btn\"\r\n                        class=\"btn btn-success\"\r\n                        onClick={() => updateComponentValue(post.id)}\r\n                      >\r\n                        OK\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"header_container\">\r\n                      <h5 className=\"card-title\">{post.title}</h5>\r\n                      <button\r\n                        class=\"btn btn-outline-primary\"\r\n                        onClick={() => changeEditMode(post.id)}\r\n                      >\r\n                        <i class=\"fas fa-pencil-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                    {post.rating}\r\n                  </h6>\r\n                  <p className=\"card-text\">{post.description}</p>\r\n                  <p className=\"card-text\">\r\n                    <i className=\"fas fa-rupee-sign\"></i>\r\n                    {post.price}\r\n                  </p>\r\n                  <div class=\"button_container\">\r\n                    <button\r\n                      class=\"btn btn-outline-primary\"\r\n                      onClick={() => addToCart(post.id)}\r\n                    >\r\n                      Add To Cart\r\n                    </button>\r\n                    <button\r\n                      class=\"btn btn-outline-danger\"\r\n                      onClick={() => deleteProduct(post.id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n\r\n                    <Link\r\n                      class=\"btn btn-outline-info\"\r\n                      to=\"productInformation\"\r\n                      onClick={() => product_Information(post.id)}\r\n                    >\r\n                      Info\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        {postData.new_products.length > 0\r\n          ? postData.new_products.map((post) => {\r\n              return (\r\n                <div className=\"card\" key={post.id}>\r\n                  <div className=\"card-body\">\r\n                    <button onClick={() => changeEditMode(post.id)}>\r\n                      <i class=\"fas fa-pencil-alt\"></i>\r\n                    </button>\r\n                    {inEdit.isInEditMode && inEdit.id === post.id ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          defaultValue={post.title}\r\n                          ref={inputRef}\r\n                        />\r\n                        <button onClick={changeEditMode}>X</button>\r\n                        <button onClick={() => updateComponentValue(post.id)}>\r\n                          OK\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <h5 className=\"card-title\">{post.title}</h5>\r\n                    )}\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                      {post.rating}\r\n                    </h6>\r\n                    <p className=\"card-text\">{post.description}</p>\r\n                    <p className=\"card-text\">\r\n                      <i className=\"fas fa-rupee-sign\"></i>\r\n                      {post.price}\r\n                    </p>\r\n                    <button onClick={() => addToCart(post.id)}>\r\n                      Add To Cart\r\n                    </button>\r\n                    <button\r\n                      class=\"btn btn-danger\"\r\n                      onClick={() => deleteProduct(post.id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n\r\n                    <Link\r\n                      to=\"productInformation\"\r\n                      onClick={() => product_Information(post.id)}\r\n                    >\r\n                      Info\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"product map to state \", state);\r\n  return {\r\n    postData: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPost: () => dispatch(fetchPosts()),\r\n    deleteProduct: (id) => dispatch(deleteProduct(id)),\r\n    product_Information: (id) => dispatch(productInformation(id)),\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n    sort: () => dispatch(handleSortButton()),\r\n    edit: (data) => dispatch(handleEditPost(data)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/posts/postAction\";\r\nconst InformationContainer = ({ product_info, addToCart }) => {\r\n  const [item, setItem] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let temp = product_info.posts.filter(\r\n      (post) => post.id === product_info.product_info_id\r\n    );\r\n    setItem(temp);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {item.map((info) => {\r\n        return (\r\n          <>\r\n            <h2>Detailed Information</h2>\r\n            <div className=\"card\" key={info.id}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{info.title}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                  Rating : {info.rating}\r\n                </h6>\r\n                <p className=\"card-text\">{info.description}</p>\r\n                <p className=\"card-text\">{info.about}</p>\r\n                <p className=\"card-text\">\r\n                  <i className=\"fas fa-rupee-sign\"></i>\r\n                  {info.price}\r\n                </p>\r\n                <button onClick={() => addToCart(info.id)}>Add To Cart</button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"info mapstate \", state);\r\n  return {\r\n    product_info: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InformationContainer);\r\n","import {\r\n  ADD_TO_CART,\r\n  DELETE_PRODUCT,\r\n  DELETE_PROUDUCT_FROM_CART,\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  PRODUCT_INFORMATION,\r\n  POST_PRODUCT_SUCCESS,\r\n  HANDLE_SORT_BUTTON,\r\n  HANDLE_EDIT_POST,\r\n} from \"./postType\";\r\n\r\n// INITIAL STATE\r\nconst initialState = {\r\n  product_info_id: 0,\r\n  new_products: [],\r\n  loading: false,\r\n  sort: true,\r\n  posts: [],\r\n  cart: [],\r\n  error: \"\",\r\n};\r\n\r\n// REDUCER\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        product_info_id: 0,\r\n      };\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: false,\r\n        product_info_id: 0,\r\n        posts: action.payload,\r\n      };\r\n    case FETCH_POSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        loading: false,\r\n        product_info_id: 0,\r\n        error: action.payload,\r\n      };\r\n    case DELETE_PRODUCT:\r\n      alert(\"want to delete product\");\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: false,\r\n        product_info_id: 0,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n      };\r\n    case PRODUCT_INFORMATION:\r\n      return {\r\n        ...state,\r\n        product_info_id: action.payload,\r\n      };\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n        cart: state.cart.concat(\r\n          state.posts.filter((post) => post.id === action.payload)\r\n        ),\r\n      };\r\n    case DELETE_PROUDUCT_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload),\r\n      };\r\n    case POST_PRODUCT_SUCCESS:\r\n      let product = [\r\n        {\r\n          title: action.payload.title,\r\n          description: action.payload.description,\r\n          price: action.payload.price,\r\n          rating: action.payload.rating,\r\n        },\r\n      ];\r\n      return {\r\n        ...state,\r\n        new_products: product,\r\n      };\r\n    case HANDLE_SORT_BUTTON:\r\n      return {\r\n        ...state,\r\n        sort: !state.sort,\r\n      };\r\n    case HANDLE_EDIT_POST:\r\n      let tempPosts = state.posts.map((post) => {\r\n        if (post.id === action.payload.id) {\r\n          return { ...post, title: action.payload.value };\r\n        } else {\r\n          return post;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: tempPosts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./posts/postReducer\";\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1 class=\"display-1\">Welcome 💖</h1>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProductFromCart } from \"../redux/posts/postAction\";\r\n\r\nconst CartContainer = ({ cart, deleteProductFromCart }) => {\r\n  return (\r\n    <div className=\"cart_container\">\r\n      <h2>Cart Items</h2>\r\n      {cart.map((item) => {\r\n        return (\r\n          <div className=\"card\" id=\"cart_id\" key={item.id}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{item.title}</h5>\r\n              <h6 className=\"card-subtitle mb-2 text-muted\">{item.rating}</h6>\r\n              <p className=\"card-text\">{item.description}</p>\r\n              <p className=\"card-text\">\r\n                <i className=\"fas fa-rupee-sign\"></i>\r\n                {item.price}\r\n              </p>\r\n              <div class=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button\r\n                  class=\"btn btn-outline-danger\"\r\n                  onClick={() => deleteProductFromCart(item.id)}\r\n                >\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteProductFromCart: (id) => dispatch(deleteProductFromCart(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  Products,\n  NewProduct,\n  Navbar,\n  InformationContainer,\n} from \"./components/index\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport CartContainer from \"./components/CartContainer\";\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"/products\">\n          <Products />\n        </Route>\n        <Route path=\"/new\">\n          <NewProduct />\n        </Route>\n        <Route path=\"/productInformation\">\n          <InformationContainer />\n        </Route>\n        <Route path=\"/cart\">\n          <CartContainer />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}