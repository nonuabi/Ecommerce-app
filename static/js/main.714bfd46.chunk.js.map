{"version":3,"sources":["redux/posts/postType.js","redux/posts/postAction.js","components/NewProduct.js","components/Navbar.js","components/Products.js","components/InformationContainer.js","components/CartContainer.js","redux/posts/postReducer.js","redux/store.js","App.js","index.js"],"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","DELETE_PROUDUCT_FROM_CART","DELETE_PRODUCT","PRODUCT_INFORMATION","ADD_TO_CART","POST_PRODUCT_SUCCESS","HANDLE_SORT_BUTTON","HANDLE_EDIT_POST","api_url","fetchPostsRequest","type","addToCart","product_id","payload","postProductSuccess","product","NewProduct","dispatch","useDispatch","useState","title","description","price","rating","details","setDetails","className","name","id","placeholder","onChange","e","target","value","onClick","a","fetch","method","body","JSON","stringify","headers","res","json","data","alert","connect","state","numOfCartItems","cart","length","to","postData","fetchPost","response","deleteProduct","product_Information","sort","edit","handleEditPost","isInEditMode","inEdit","setInEdit","inputRef","useRef","useEffect","changeEditMode","updateComponentValue","current","loading","error","posts","b","map","post","defaultValue","ref","new_products","product_info","item","setItem","temp","filter","product_info_id","info","about","deleteProductFromCart","initialState","reducer","action","concat","tempPosts","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.714bfd46.chunk.js","sourcesContent":["// ACTION TYPES\r\nexport const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\r\nexport const FETCH_POSTS_FAILURE = \"FETCH_POSTS_FAILURE\";\r\nexport const DELETE_PROUDUCT_FROM_CART = \"DELETE_PROUDUCT_FROM_CART\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const PRODUCT_INFORMATION = \"PRODUCT_INFORMATION\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const POST_PRODUCT_SUCCESS = \"POST_PRODUCT_SUCCESS\";\r\nexport const HANDLE_SORT_BUTTON = \"HANDLE_SORT_BUTTON\";\r\nexport const HANDLE_EDIT_POST = \"HANDLE_EDIT_POST\";\r\n","// IMPORT ACTION TYPES\r\nimport {\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  DELETE_PRODUCT,\r\n  PRODUCT_INFORMATION,\r\n  ADD_TO_CART,\r\n  DELETE_PROUDUCT_FROM_CART,\r\n  POST_PRODUCT_SUCCESS,\r\n  HANDLE_SORT_BUTTON,\r\n  HANDLE_EDIT_POST,\r\n} from \"./postType\";\r\n// API URL\r\nconst api_url =\r\n  \"https://my-json-server.typicode.com/nonuabi/Ecommerce-App-DB/posts\";\r\n// REQUEST FETCH ACTION\r\nexport const fetchPostsRequest = () => {\r\n  return {\r\n    type: FETCH_POSTS_REQUEST,\r\n  };\r\n};\r\n// SUCCESSFULL FETCH POST ACTION\r\nexport const fetchPostsSuccess = (posts) => {\r\n  return {\r\n    type: FETCH_POSTS_SUCCESS,\r\n    payload: posts,\r\n  };\r\n};\r\n// FAILURE FETCH POST ACTION\r\nexport const fetchPostsFailure = (error) => {\r\n  return {\r\n    type: FETCH_POSTS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n// FETCH POST FORM THE API ACTION WHICH RETURN AN FUNCTION\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostsRequest);\r\n    const res = await fetch(api_url);\r\n    const response = await res.json();\r\n    if (response) {\r\n      dispatch(fetchPostsSuccess(response));\r\n    } else {\r\n      alert(\"server error while fetching data\");\r\n      dispatch(fetchPostsFailure(\"server error\"));\r\n    }\r\n  };\r\n};\r\n\r\n// DELTE PRODUCT ACTION CREADTER\r\nexport const deleteProduct = (id) => {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    payload: id,\r\n  };\r\n};\r\n// INFORMATION ABOUT PROUDCTION ACTION\r\nexport const productInformation = (product_id) => {\r\n  return {\r\n    type: PRODUCT_INFORMATION,\r\n    payload: product_id,\r\n  };\r\n};\r\n\r\n// ADD PRODUCT TO THE CART LIST ACTION\r\nexport const addToCart = (product_id) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    payload: product_id,\r\n  };\r\n};\r\n\r\n// DELETE THE PRODUCT ACTIONS\r\nexport const deleteProductFromCart = (product_id) => {\r\n  return {\r\n    type: DELETE_PROUDUCT_FROM_CART,\r\n    payload: product_id,\r\n  };\r\n};\r\n// ADD NEW PRODUCT SUCCESSFULL ACTION\r\nexport const postProductSuccess = (product) => {\r\n  return {\r\n    type: POST_PRODUCT_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\n\r\n// ADD NEW DATA TO THE DB API CALL ACTION\r\nexport const addProduct = (product) => {\r\n  return async (dispatch) => {\r\n    const res = await fetch(api_url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        ...product,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    if (data) {\r\n      alert(\"product is added\");\r\n      dispatch(postProductSuccess(data));\r\n    } else {\r\n      alert(\"server error while posting data to the db\");\r\n    }\r\n  };\r\n};\r\n\r\n// TO SORT THE PRICE ACTION\r\nexport const handleSortButton = () => {\r\n  return {\r\n    type: HANDLE_SORT_BUTTON,\r\n  };\r\n};\r\n\r\n// EDIT POST ACTION\r\nexport const handleEditPost = (data) => {\r\n  return {\r\n    type: HANDLE_EDIT_POST,\r\n    payload: data,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { addProduct } from \"../redux/posts/postAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"../css/NewProduct.css\";\r\nconst NewProduct = () => {\r\n  // USING HOOKS DISPATCH\r\n  const dispatch = useDispatch();\r\n  // SATET TO STORE INPUT BY THE USER\r\n  const [details, setDetails] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    rating: 0.0,\r\n  });\r\n\r\n  return (\r\n    <div className=\"new_product\">\r\n      <h1 className=\"display-4\">Add a Product</h1>\r\n      <div className=\"form_item\">\r\n        <div className=\"form-floating mb-3\">\r\n          {/* TITLE OF THE PRODUCTS INPUT */}\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"floatingInput\"\r\n            placeholder=\"Name\"\r\n            onChange={(e) => setDetails({ ...details, title: e.target.value })}\r\n            value={details.title}\r\n          />\r\n          <label v-for=\"floatingInput\">Name</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          {/* DESCRIPTION ABOUT THE PRODUCT */}\r\n          <input\r\n            name=\"description\"\r\n            value={details.description}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Description\"\r\n            onChange={(e) =>\r\n              setDetails({ ...details, description: e.target.value })\r\n            }\r\n          />\r\n          <label v-for=\"floatingPassword\">Description</label>\r\n        </div>\r\n        {/* PRICE OF THE PRODUCT CONTAINER */}\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"price\"\r\n            value={details.price}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Price\"\r\n            onChange={(e) => setDetails({ ...details, price: e.target.value })}\r\n          />\r\n          <label v-for=\"floatingPassword\">Price</label>\r\n        </div>\r\n        {/* RATING CONTAINER  */}\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            name=\"rating\"\r\n            value={details.rating}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"Rating\"\r\n            onChange={(e) => setDetails({ ...details, rating: e.target.value })}\r\n          />\r\n          <label v-for=\"floatingPassword\">Rating</label>\r\n        </div>\r\n        {/* SUBMIT USER ENTER DETAIL BUTTON */}\r\n        <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n          <button\r\n            onClick={() => dispatch(addProduct(details))}\r\n            className=\"btn btn-dark\"\r\n            type=\"submit\"\r\n          >\r\n            Button\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// NAV BAR CSS\r\nimport \"../css/Navbar.css\";\r\n// NAVBAR COMPONENT\r\nconst Navbar = ({ numOfCartItems }) => {\r\n  return (\r\n    <div className=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        {/* HOME PAGE LINK */}\r\n        <Link id=\"home_link\" className=\"navbar-brand\" to=\"/\">\r\n          eCommerce\r\n        </Link>\r\n        <div className=\" navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item nav-link active\">\r\n              {/* LIST OF PRODUCT LINK */}\r\n              <Link className=\"navbar-brand\" to=\"products\">\r\n                Products\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item nav-link active\">\r\n              {\" \"}\r\n              {/* ADD NEW PROUDUCT PAGE LINK */}\r\n              <Link className=\"navbar-brand\" to=\"/new\">\r\n                Add a Product <i className=\"fas fa-folder-plus\"></i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {/* CART PAGE ICON/LINK */}\r\n        <Link className=\"navbar-brand\" to=\"/cart\">\r\n          <i className=\"fas fa-cart-plus\"></i>\r\n          <span>{numOfCartItems}</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// MAPPING STATE FUNCTION\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    numOfCartItems: state.cart.length,\r\n  };\r\n};\r\n\r\n// CONNECTING STATE TO THE COMPONET\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n// PRODUCT LIST PAGE CSS\r\nimport \"../css/ProductsContainer.css\";\r\n// IMPORTING ACTIONS\r\nimport {\r\n  deleteProduct,\r\n  fetchPosts,\r\n  productInformation,\r\n  addToCart,\r\n  handleSortButton,\r\n  handleEditPost,\r\n} from \"../redux/posts/postAction\";\r\n// DECONSTRUCTING PROPS\r\nconst Products = ({\r\n  fetchPost,\r\n  postData,\r\n  deleteProduct,\r\n  product_Information,\r\n  addToCart,\r\n  sort,\r\n  edit,\r\n}) => {\r\n  // STATE TO  CHECK WHETHER PENCIL BUTTON CLICK OR NOT\r\n  const [inEdit, setInEdit] = useState({\r\n    value: \"Type Here..\",\r\n    isInEditMode: false,\r\n    id: -1,\r\n  });\r\n  // TO GET INPUT VALUE\r\n  const inputRef = useRef(null);\r\n  // TO LOAD DATA WHEN THE PRODUCT PAGE IS RENDERED\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, [postData.sort]);\r\n  // HANDLE THE PENCILE BUTTON CLICK\r\n  const changeEditMode = (product_id) => {\r\n    setInEdit({\r\n      ...inEdit,\r\n      isInEditMode: !inEdit.isInEditMode,\r\n      id: product_id,\r\n    });\r\n  };\r\n  // UPDATE THE TITLE WHEN CLICK OVER THE OK BUTTON\r\n  const updateComponentValue = (product_id) => {\r\n    edit({ id: product_id, value: inputRef.current.value });\r\n    if (inputRef.current) {\r\n      setInEdit({\r\n        ...inEdit,\r\n        isInEditMode: !inEdit.isInEditMode,\r\n        value: inputRef.current.value,\r\n      });\r\n    }\r\n  };\r\n  // TO SORT THE PRICE LIST IN ASSENDING ORDER\r\n  const handleSort = () => {\r\n    if (postData.sort) {\r\n      return postData.posts;\r\n    } else {\r\n      let sorted = postData.posts.sort((a, b) => {\r\n        return a.price - b.price;\r\n      });\r\n      return sorted;\r\n    }\r\n  };\r\n  // CHECKING IS API STILL GETING DATA OR NOT\r\n  return postData.loading ? (\r\n    <h2 className=\"display-1\">Loading...</h2>\r\n  ) : postData && postData.error ? (\r\n    // IF ANY ERROR WHILE FETCHING DATA IT WILL DISPLAY\r\n    <h2>{postData.error}</h2>\r\n  ) : (\r\n    <div>\r\n      {/* HEADER OF THE CONTAINER WHILE CONTAINER HEADING AND SORT BUTTON */}\r\n      <div className=\"product_header\">\r\n        <h2>Product List</h2>\r\n        {postData.sort === true ? (\r\n          <button className=\"btn btn-outline-dark\" onClick={sort}>\r\n            Sort\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-outline-danger\" onClick={sort}>\r\n            X\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"cart_container\">\r\n        {/* CHECK FOR THE FETCHED DATA */}\r\n        {postData &&\r\n          postData.posts &&\r\n          // MAPPING OVER THE DATA\r\n          handleSort().map((post) => {\r\n            return (\r\n              <div className=\"card\" id=\"cart_id\" key={post.id}>\r\n                <div className=\"card-body\">\r\n                  {/* CHECKING IS PENCIL BUTTON IS CLICKED OR NOT */}\r\n                  {inEdit.isInEditMode && inEdit.id === post.id ? (\r\n                    <div\r\n                      id=\"edit_input_container\"\r\n                      className=\"input-group flex-nowrap\"\r\n                    >\r\n                      {/* EDIT INPUT TAG */}\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        defaultValue={post.title}\r\n                        ref={inputRef}\r\n                      />\r\n                      {/* BUTTON TO IGONRE THE ENTER VALUE BY THE USER */}\r\n                      <button\r\n                        id=\"edit_btn\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={changeEditMode}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      {/* BUTTON TO UPDATE THE TITLE */}\r\n                      <button\r\n                        id=\"edit_btn\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => updateComponentValue(post.id)}\r\n                      >\r\n                        OK\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"header_container\">\r\n                      {/* PRODUCT TITLE */}\r\n                      <h5 className=\"card-title\">{post.title}</h5>\r\n                      {/* PRODUCT INFORMATION BUTTON */}\r\n                      <button\r\n                        className=\"btn btn-outline-primary\"\r\n                        onClick={() => changeEditMode(post.id)}\r\n                      >\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  {/* PRODUCT RATING  */}\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                    {post.rating}\r\n                  </h6>\r\n                  {/* PRODUCT INFORMATION */}\r\n                  <p className=\"card-text\">{post.description}</p>\r\n                  {/* PRODUCT PRICE */}\r\n                  <p className=\"card-text\">\r\n                    <i className=\"fas fa-rupee-sign\"></i>\r\n                    {post.price}\r\n                  </p>\r\n                  <div className=\"button_container\">\r\n                    {/* ADD TO CART PAGE BUTTON */}\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      onClick={() => addToCart(post.id)}\r\n                    >\r\n                      Add To Cart\r\n                    </button>\r\n                    {/* DELETE PRODUCT BUTTON */}\r\n                    <button\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={() => deleteProduct(post.id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                    {/* REDIRECT TO INFORMATION ABOUT THE PRODUCT PAGE LINK */}\r\n                    <Link\r\n                      className=\"btn btn-outline-info\"\r\n                      to=\"productInformation\"\r\n                      onClick={() => product_Information(post.id)}\r\n                    >\r\n                      Info\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        {/* ITERATING OVER THE NEWLY ADDED PRODUCTS  */}\r\n        {postData.new_products.length > 0\r\n          ? postData.new_products.map((post) => {\r\n              return (\r\n                <div className=\"card\" id=\"cart_id\" key={post.id}>\r\n                  <div className=\"card-body\">\r\n                    {inEdit.isInEditMode && inEdit.id === post.id ? (\r\n                      <div\r\n                        id=\"edit_input_container\"\r\n                        className=\"input-group flex-nowrap\"\r\n                      >\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          defaultValue={post.title}\r\n                          ref={inputRef}\r\n                        />\r\n                        <button\r\n                          id=\"edit_btn\"\r\n                          className=\"btn btn-danger\"\r\n                          onClick={changeEditMode}\r\n                        >\r\n                          X\r\n                        </button>\r\n                        <button\r\n                          id=\"edit_btn\"\r\n                          className=\"btn btn-success\"\r\n                          onClick={() => updateComponentValue(post.id)}\r\n                        >\r\n                          OK\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"header_container\">\r\n                        <h5 className=\"card-title\">{post.title}</h5>\r\n                        <button\r\n                          className=\"btn btn-outline-primary\"\r\n                          onClick={() => changeEditMode(post.id)}\r\n                        >\r\n                          <i className=\"fas fa-pencil-alt\"></i>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                      {post.rating}\r\n                    </h6>\r\n                    <p className=\"card-text\">{post.description}</p>\r\n                    <p className=\"card-text\">\r\n                      <i className=\"fas fa-rupee-sign\"></i>\r\n                      {post.price}\r\n                    </p>\r\n                    <div className=\"button_container\">\r\n                      <button\r\n                        className=\"btn btn-outline-primary\"\r\n                        onClick={() => addToCart(post.id)}\r\n                      >\r\n                        Add To Cart\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={() => deleteProduct(post.id)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n\r\n                      <Link\r\n                        className=\"btn btn-outline-info\"\r\n                        to=\"productInformation\"\r\n                        onClick={() => product_Information(post.id)}\r\n                      >\r\n                        Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// MAP TO STATE FUNCTION\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postData: state,\r\n  };\r\n};\r\n\r\n// MAP TO DISPATCH FUNCTION\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPost: () => dispatch(fetchPosts()),\r\n    deleteProduct: (id) => dispatch(deleteProduct(id)),\r\n    product_Information: (id) => dispatch(productInformation(id)),\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n    sort: () => dispatch(handleSortButton()),\r\n    edit: (data) => dispatch(handleEditPost(data)),\r\n  };\r\n};\r\n// CONNECTING STATE AND DISPATCH TO THE COMPONENT\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/posts/postAction\";\r\nconst InformationContainer = ({ product_info, addToCart }) => {\r\n  // STATE TO STORE PRODUCT\r\n  const [item, setItem] = useState([]);\r\n\r\n  // TO GET DATA WHEN EVER THE INFORMATION PAGE IS RENDER\r\n  useEffect(() => {\r\n    let temp = product_info.posts.filter(\r\n      (post) => post.id === product_info.product_info_id\r\n    );\r\n    setItem(temp);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* MAPPING OVER THE ITME STATE ARRAY  */}\r\n      {item.map((info) => {\r\n        return (\r\n          <>\r\n            <h2>Detailed Information</h2>\r\n            <div className=\"card\" key={info.id}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{info.title}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                  Rating : {info.rating}\r\n                </h6>\r\n                <p className=\"card-text\">{info.description}</p>\r\n                <p className=\"card-text\">{info.about}</p>\r\n                <p className=\"card-text\">\r\n                  <i className=\"fas fa-rupee-sign\"></i>\r\n                  {info.price}\r\n                </p>\r\n                <button onClick={() => addToCart(info.id)}>Add To Cart</button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// MAP TO STATE FUNCTION\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    product_info: state,\r\n  };\r\n};\r\n// MAP TO DISPATCH FUNCTION\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n  };\r\n};\r\n\r\n// EXORTING AND CONNECTING STATES AND PROPS TO THE COMPONENT\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InformationContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//DELETE PRODUCT ACTION\r\nimport { deleteProductFromCart } from \"../redux/posts/postAction\";\r\n\r\n// CART CONTAINER COMPONENT\r\nconst CartContainer = ({ cart, deleteProductFromCart }) => {\r\n  return (\r\n    <div className=\"cart_container\">\r\n      <h2>Cart Items</h2>\r\n      {/* ITERATING OVER CART ARRAY  */}\r\n      {cart.map((item) => {\r\n        return (\r\n          <div className=\"card\" id=\"cart_id\" key={item.id}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{item.title}</h5>\r\n              <h6 className=\"card-subtitle mb-2 text-muted\">{item.rating}</h6>\r\n              <p className=\"card-text\">{item.description}</p>\r\n              <p className=\"card-text\">\r\n                <i className=\"fas fa-rupee-sign\"></i>\r\n                {item.price}\r\n              </p>\r\n              <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button\r\n                  className=\"btn btn-outline-danger\"\r\n                  onClick={() => deleteProductFromCart(item.id)}\r\n                >\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// MAP STATE TO PROPS FUNCTION\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n};\r\n\r\n// MAP DISPATCH TO PROPS FUNCTION\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteProductFromCart: (id) => dispatch(deleteProductFromCart(id)),\r\n  };\r\n};\r\n\r\n// CONNECTING THE STATE AND DISPATCH TO THE COMPOENT\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\r\n","// IMPORTING ACTION TYPES\r\nimport {\r\n  ADD_TO_CART,\r\n  DELETE_PRODUCT,\r\n  DELETE_PROUDUCT_FROM_CART,\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  PRODUCT_INFORMATION,\r\n  POST_PRODUCT_SUCCESS,\r\n  HANDLE_SORT_BUTTON,\r\n  HANDLE_EDIT_POST,\r\n} from \"./postType\";\r\n\r\n// INITIAL STATE\r\nconst initialState = {\r\n  product_info_id: 0,\r\n  new_products: [],\r\n  loading: false,\r\n  sort: true,\r\n  posts: [],\r\n  cart: [],\r\n  error: \"\",\r\n};\r\n\r\n// REDUCER\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        product_info_id: 0,\r\n      };\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: false,\r\n        product_info_id: 0,\r\n        posts: action.payload,\r\n      };\r\n    case FETCH_POSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        loading: false,\r\n        product_info_id: 0,\r\n        error: action.payload,\r\n      };\r\n    case DELETE_PRODUCT:\r\n      alert(\"Product Delete\");\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: false,\r\n        product_info_id: 0,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n      };\r\n    case PRODUCT_INFORMATION:\r\n      return {\r\n        ...state,\r\n        product_info_id: action.payload,\r\n      };\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n        cart: state.cart.concat(\r\n          state.posts.filter((post) => post.id === action.payload)\r\n        ),\r\n      };\r\n    case DELETE_PROUDUCT_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload),\r\n      };\r\n    case POST_PRODUCT_SUCCESS:\r\n      let product = [\r\n        {\r\n          title: action.payload.title,\r\n          description: action.payload.description,\r\n          price: action.payload.price,\r\n          rating: action.payload.rating,\r\n        },\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        new_products: product,\r\n      };\r\n    case HANDLE_SORT_BUTTON:\r\n      return {\r\n        ...state,\r\n        sort: !state.sort,\r\n      };\r\n    case HANDLE_EDIT_POST:\r\n      let tempPosts = state.posts.map((post) => {\r\n        if (post.id === action.payload.id) {\r\n          return { ...post, title: action.payload.value };\r\n        } else {\r\n          return post;\r\n        }\r\n      });\r\n      alert(`Title changed to ${action.payload.value}`);\r\n      return {\r\n        ...state,\r\n        posts: tempPosts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","// STORE FOR THE STATE\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./posts/postReducer\";\r\n// CREATE STORE\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\n// HOME PAGE\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"display-1\">Welcome 💖</h1>\n    </div>\n  );\n};\n\nexport default App;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  Products,\n  NewProduct,\n  Navbar,\n  InformationContainer,\n  CartContainer,\n} from \"./components/index\";\n// GET PROVIDER FROM THE REACT REDUX\nimport { Provider } from \"react-redux\";\n// IMPORT STORE\nimport store from \"./redux/store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  // SEDING STORE AS A PROPS\n  <Provider store={store}>\n    <Router>\n      <Navbar />\n      {/* USED SWITCH  */}\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"/products\">\n          <Products />\n        </Route>\n        <Route path=\"/new\">\n          <NewProduct />\n        </Route>\n        <Route path=\"/productInformation\">\n          <InformationContainer />\n        </Route>\n        <Route path=\"/cart\">\n          <CartContainer />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}